template: true
valuesFilePath: ../values/gitRepoValues.yml

resources:
  - name: S_HelmDeploy_7602_0005_GitRepo
    type: GitRepo
    configuration:
      gitProvider: s_gitHub
      path: {{ .Values.GitHub.Org_test_Automation_bash.path }}
      branches:
        include: ^{{gitBranch}}$
  - name: S_HelmDeploy_7602_0005_HelmChart
    type: HelmChart
    configuration:
      sourceArtifactory: s_artifactory
      repository: test-automation-helm-local
      version: version
      chart: simplehelmdeploy

pipelines:
  - name: S_HelmDeploy_7602_0005
    configuration:
      environmentVariables:
        readOnly:
          RELEASE_NAME: "s-helmdeploy-7602-0005-${run_id}"
          k8s_namespace: "pipe-master-pool"
          JFROG_CLI_BUILD_NUMBER: ${run_id}
          CHART_VERSION: v0.76020005.${run_id}
    steps:
      - name: S_HelmDeploy_7602_0005_1
        type: HelmPublish
        configuration:
          chartPath: "./tests/helmCharts/simplehelmdeploy"
          flags: "--version ${CHART_VERSION}"
          helmVersion: 3
          inputResources:
            - name: S_HelmDeploy_7602_0005_GitRepo
          outputResources:
            - name: S_HelmDeploy_7602_0005_HelmChart
          integrations:
            - name: s_artifactory
        execution:
          onStart:
            - replace_envs ${res_S_HelmDeploy_7602_0005_GitRepo_resourcePath}/tests/helmCharts/simplehelmdeploy/Chart.yaml
      - name: S_HelmDeploy_7602_0005_2
        type: HelmDeploy
        configuration:
          inputResources:
            - name: S_HelmDeploy_7602_0005_HelmChart
            - name: S_HelmDeploy_7602_0005_GitRepo
          integrations:
            - name: s_artifactory
            - name: s_kubernetes
          chartVersion: ${CHART_VERSION}
          chartPath: ./
          helmVersion: 3
          releaseName: ${RELEASE_NAME}
          flags: "--wait --timeout 120s -n ${k8s_namespace} --debug"
          valueFilePaths:
            - ${res_S_HelmDeploy_7602_0005_GitRepo_resourcePath}/tests/helmCharts/simplehelmdeploy/values2.yaml
          lint: true
          lintFlags: "--strict"
          test: true
          testFlags: "-n ${k8s_namespace}"
        execution:
          onComplete:
            - helm3 delete ${RELEASE_NAME} --namespace ${k8s_namespace}
            - kubectl delete pod --namespace ${k8s_namespace} ${RELEASE_NAME}-test-connection
