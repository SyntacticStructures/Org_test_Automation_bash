resources:
  - name: TAYLORL_4009_fileSpec
    type: FileSpec
    configuration:
      sourceArtifactory: s_artifactory
      pattern: "test-automation-generic-local/TAYLORL_4009_fileSpec.txt"

  - name: myVM
    type: VmCluster
    configuration:
      sshKey: VM_DEPLOY_SSHKEY
      targets:
        - 10.90.117.100
        - 10.90.117.100

  - name: myVMError
    type: VmCluster
    configuration:
      sshKey: VM_DEPLOY_SSHKEY
      targets:
        - 10.90.117.100
        - bogus.ip.address.to.trigger.error

pipelines:
  - name: TAYLORL_4009
    steps:
      - name: TAYLORL_4009_1
        type: Bash
        configuration:
          integrations:
            - name: s_artifactory
          outputResources:
            - name: TAYLORL_4009_fileSpec
        execution:
          onExecute:
            - echo "File spec ${run_id}" > TAYLORL_4009_fileSpec.txt
            - jfrog rt upload TAYLORL_4009_fileSpec.txt test-automation-generic-local
      # Check that deploy command runs and FileSpec is uploaded to default dir.
      - name: TAYLORL_4009_2
        type: jfrog_dev/LinuxVMDeploy
        configuration:
          vmEnvironmentVariables:
            - "step_name=${step_name}"
            - "run_id=${run_id}"
          inputResources:
            - name: myVM
            - name: TAYLORL_4009_fileSpec
          deployCommand: "ls ~/${step_name}/${run_id}/TAYLORL_4009_fileSpec.txt || exit 1"
          postDeployCommand: "ls ~/${step_name}/${run_id}/TAYLORL_4009_fileSpec.txt || exit 1"
          sshUser: ubuntu

      # TODO: separate cases with duplicate resource steps
      # Check that deploy artifacts are uploaded to non-default dir.
      - name: TAYLORL_4009_3
        type: jfrog_dev/LinuxVMDeploy
        configuration:
          targetDirectory: "~/test/${step_name}/${run_id}"
          vmEnvironmentVariables:
            - "step_name=${step_name}"
            - "run_id=${run_id}"
            - "target_directory=${step_configuration_targetDirectory}"
          inputResources:
            - name: myVM
            - name: TAYLORL_4009_fileSpec
          deployCommand: "ls ${target_directory}/TAYLORL_4009_fileSpec.txt || exit 1"
          # Check post deploy command runs on vm
          # sshUser cannot be root for the ec2 vms we are using
          sshUser: ubuntu

      # Check that rollbackCommand runs on vm when there is an error.
      - name: TAYLORL_4009_4
        type: jfrog_dev/LinuxVMDeploy
        configuration:
          inputResources:
            - name: myVMError
            - name: TAYLORL_4009_fileSpec
          deployCommand: "echo 'This should run one time.';"
          rollbackCommand: "[[ whoami ]] == ubuntu"
          # Check post deploy command runs on vm
          # sshUser cannot be root for the ec2 vms we are using
          sshUser: ubuntu
