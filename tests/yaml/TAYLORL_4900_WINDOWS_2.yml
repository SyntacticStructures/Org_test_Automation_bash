resources:
  - name: TAYLORL_4900_WINDOWS_fileSpec
    type: FileSpec
    configuration:
      sourceArtifactory: s_artifactory
      pattern: "test-automation-generic-local/TAYLORL_4900_WINDOWS_fileSpec.txt"

  - name: myVMError
    type: VmCluster
    configuration:
      sshKey: VM_DEPLOY_SSHKEY
      targets:
        # int_s_VM_DEPLOY_VM_ADDRESS_ERROR_0 should fail
        # so we should never see int_s_VM_DEPLOY_VM_ADDRESS_ERROR_1 in console output
        - ${int_s_VM_DEPLOY_VM_ADDRESS_0}
        - ${int_s_VM_DEPLOY_VM_ADDRESS_ERROR_0}
        - ${int_s_VM_DEPLOY_VM_ADDRESS_ERROR_1}

pipelines:
  - name: TAYLORL_4900_WINDOWS_2
    steps:
      - name: TAYLORL_4900_WINDOWS_2_1
        type: Powershell
        configuration:
          nodePool: win_2019
          integrations:
            - name: s_artifactory
          outputResources:
            - name: TAYLORL_4900_WINDOWS_fileSpec
        execution:
          onExecute:
            - echo "File spec ${run_id}" > TAYLORL_4900_WINDOWS_fileSpec.txt
            - jfrog rt upload TAYLORL_4900_WINDOWS_fileSpec.txt test-automation-generic-local
      # Check that deploy artifacts are uploaded to non-default dir.
      - name: TAYLORL_4900_WINDOWS_2_2
        type: jfrog_dev/LinuxVMDeploy
        configuration:
          nodePool: win_2019
          integrations:
            - name: s_VM_DEPLOY
          inputResources:
            - name: myVMError
            - name: TAYLORL_4900_WINDOWS_fileSpec
          deployCommand: "echo 'deployCommand runs.'"
          rollbackCommand: "echo 'rollBackCommand runs.'"
          sshUser: ubuntu
